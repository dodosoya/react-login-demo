{"version":3,"sources":["action.js","components/Login.js","components/ListItems.js","components/Dashboard.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","LOGIN","LOGOUT","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","marginTop","submit","Login","classes","dispatch","React","useContext","AuthContext","useState","username","password","isSubmitting","errorMessage","data","setData","handleChange","e","target","name","value","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","preventDefault","setTimeout","type","payload","token","TextField","required","fullWidth","id","label","autoFocus","onChange","autoComplete","Button","disabled","Box","mt","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","Dashboard","open","setOpen","anchorEl","setAnchorEl","fixedHeightPaper","clsx","handleClose","AppBar","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Badge","badgeContent","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","getContentAnchorEl","keepMounted","transformOrigin","Boolean","onClose","MenuItem","Divider","Drawer","List","Container","maxWidth","lg","reducer","state","action","localStorage","setItem","isAuthenticated","clear","createContext","initialState","App","useReducer","useEffect","getItem","Provider","exact","path","to","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2YAAaA,EAAc,CACzBC,MAAO,QACPC,OAAQ,U,yjBCaV,SAASC,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAAMC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQ,SAEVC,MAAO,CACLC,gBAAiB,0CACjBC,iBAAkB,YAClBC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLC,OAAQT,EAAMU,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,OAAQT,EAAMU,QAAQ,GACtBK,gBAAiBf,EAAMgB,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPC,UAAWrB,EAAMU,QAAQ,IAE3BY,OAAQ,CACNb,OAAQT,EAAMU,QAAQ,EAAG,EAAG,QAIjB,SAASa,IACtB,IAAMC,EAAU1B,IACR2B,EAAaC,IAAMC,WAAWC,IAA9BH,SAFsB,EASNC,IAAMG,SANT,CACnBC,SAAU,GACVC,SAAU,GACVC,cAAc,EACdC,aAAc,OAPc,mBASvBC,EATuB,KASjBC,EATiB,KAWxBC,EAAe,SAAAC,GACnBF,EAAQ,EAAD,GACFD,EADE,eAEJG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAuB9B,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAOC,UAAWpB,EAAQvB,MAClD,kBAAC4C,EAAA,EAAD,MACA,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGL,UAAWpB,EAAQrB,QACvD,kBAACsC,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGN,UAAWO,IAAOC,UAAW,EAAGC,QAAM,GACrE,yBAAKR,UAAWpB,EAAQhB,OACtB,kBAAC6C,EAAA,EAAD,CAAQT,UAAWpB,EAAQV,QACzB,kBAAC,IAAD,OAEF,kBAACxB,EAAA,EAAD,CAAYqD,UAAU,KAAKpD,QAAQ,MAAnC,UAGA,0BAAMqD,UAAWpB,EAAQL,KAAMmC,YAAU,EAACC,SA/BzB,SAAAlB,GACvBA,EAAEmB,iBACFrB,EAAQ,EAAD,GACFD,EADE,CAELF,cAAc,EACdC,aAAc,QAGhBwB,YAAW,WACThC,EAAS,CACPiC,KAAMxE,EAAYC,MAClBwE,QAAS,CACP7B,SAAUI,EAAKJ,SACf8B,MAAO,gBAGV,OAgBK,kBAACC,EAAA,EAAD,CACEtE,QAAQ,WACRkB,OAAO,SACPqD,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,YACN1B,KAAK,WACL2B,WAAS,EACT1B,MAAON,EAAKJ,SACZqC,SAAU/B,IAEZ,kBAACyB,EAAA,EAAD,CACEtE,QAAQ,WACRkB,OAAO,SACPqD,UAAQ,EACRC,WAAS,EACTxB,KAAK,WACL0B,MAAM,WACNP,KAAK,WACLM,GAAG,WACHI,aAAa,mBACb5B,MAAON,EAAKH,SACZoC,SAAU/B,IAGXF,EAAKD,cAAgB,8BAAOC,EAAKD,cAElC,kBAACoC,EAAA,EAAD,CACEX,KAAK,SACLK,WAAS,EACTxE,QAAQ,YACRC,MAAM,UACNoD,UAAWpB,EAAQF,OACnBgD,SAAUpC,EAAKF,cAEdE,EAAKF,aAAe,aAAe,UAEtC,kBAACuC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACnF,EAAD,W,kMC5IDoF,EACX,6BACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAcC,QAAQ,gB,8kBCc5B,SAASzF,KACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKP,IAEMC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJU,QAAS,QAEXoE,QAAS,CACPC,aAAc,IAEhBC,YAAY,IACVtE,QAAS,OACTE,WAAY,SACZqE,eAAgB,WAChBC,QAAS,SACNnF,EAAMoF,OAAOL,SAElBM,OAAQ,CACNC,OAAQtF,EAAMsF,OAAOC,OAAS,EAC9BC,WAAYxF,EAAMyF,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ3F,EAAMyF,YAAYE,OAAOC,MACjCC,SAAU7F,EAAMyF,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAxBgB,IAyBhB5E,MAAM,eAAD,OAzBW,IAyBX,OACLoE,WAAYxF,EAAMyF,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ3F,EAAMyF,YAAYE,OAAOC,MACjCC,SAAU7F,EAAMyF,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBzF,QAAS,QAEX0F,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZrF,MA3CgB,IA4ChBoE,WAAYxF,EAAMyF,YAAYC,OAAO,QAAS,CAC5CC,OAAQ3F,EAAMyF,YAAYE,OAAOC,MACjCC,SAAU7F,EAAMyF,YAAYI,SAASI,kBAGzCS,iBAAiB,aACfC,UAAW,SACXnB,WAAYxF,EAAMyF,YAAYC,OAAO,QAAS,CAC5CC,OAAQ3F,EAAMyF,YAAYE,OAAOC,MACjCC,SAAU7F,EAAMyF,YAAYI,SAASC,gBAEvC1E,MAAOpB,EAAMU,QAAQ,IACpBV,EAAM4G,YAAYC,GAAG,MAAQ,CAC5BzF,MAAOpB,EAAMU,QAAQ,KAGzBoG,aAAc9G,EAAMoF,OAAOL,QAC3BgC,QAAS,CACPT,SAAU,EACVpG,OAAQ,QACR8G,SAAU,QAEZtE,UAAW,CACTuE,WAAYjH,EAAMU,QAAQ,GAC1BwG,cAAelH,EAAMU,QAAQ,IAE/BF,MAAO,CACL2E,QAASnF,EAAMU,QAAQ,GACvBC,QAAS,OACTqG,SAAU,OACVpG,cAAe,UAEjBuG,YAAa,CACXjH,OAAQ,SAIG,SAASkH,KACtB,IAAM5F,EAAU1B,KACR2B,EAAaC,IAAMC,WAAWC,IAA9BH,SAF0B,EAGVC,IAAMG,UAAS,GAHL,mBAG3BwF,EAH2B,KAGrBC,EAHqB,OAIF5F,IAAMG,SAAS,MAJb,mBAI3B0F,EAJ2B,KAIjBC,EAJiB,KAc5BC,EAAmBC,YAAKlG,EAAQhB,MAAOgB,EAAQ2F,aAM/CQ,EAAc,WAClBH,EAAY,OAWd,OACE,yBAAK5E,UAAWpB,EAAQvB,MACtB,kBAAC4C,EAAA,EAAD,MACA,kBAAC+E,EAAA,EAAD,CACEpB,SAAS,WACT5D,UAAW8E,YAAKlG,EAAQ6D,OAAQgC,GAAQ7F,EAAQuE,cAEhD,kBAAC8B,EAAA,EAAD,CAASjF,UAAWpB,EAAQuD,SAC1B,kBAAC+C,EAAA,EAAD,CACEC,KAAK,QACLvI,MAAM,UACNwI,aAAW,cACXC,QAtCe,WACvBX,GAAQ,IAsCA1E,UAAW8E,YACTlG,EAAQ0E,WACRmB,GAAQ7F,EAAQ4E,mBAGlB,kBAAC,IAAD,OAEF,kBAAC9G,EAAA,EAAD,CACEqD,UAAU,KACVpD,QAAQ,KACRC,MAAM,UACN0I,QAAM,EACNtF,UAAWpB,EAAQ6E,OALrB,aASA,kBAACyB,EAAA,EAAD,CAAYtI,MAAM,WAChB,kBAAC2I,EAAA,EAAD,CAAOC,aAAc,EAAG5I,MAAM,aAC5B,kBAAC,IAAD,QAGJ,kBAACsI,EAAA,EAAD,CACEE,aAAW,0BACXK,gBAAc,cACdC,gBAAc,OACdL,QAtDS,SAAAM,GACjBf,EAAYe,EAAMC,gBAsDVhJ,MAAM,WAEN,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACEwE,GAAG,cACHuD,SAAUA,EACVkB,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,mBAAoB,KACpBC,aAAW,EACXC,gBAAiB,CACfJ,SAAU,MACVC,WAAY,SAEdtB,KAAM0B,QAAQxB,GACdyB,QAASrB,GAET,kBAACsB,EAAA,EAAD,CAAUhB,QAASN,GAAnB,WACA,kBAACuB,EAAA,EAAD,MACA,kBAACD,EAAA,EAAD,CAAUhB,QArEC,SAAA5F,GACnBA,EAAEmB,iBAEF/B,EAAS,CACPiC,KAAMxE,EAAYE,WAiEZ,aAIN,kBAAC+J,EAAA,EAAD,CACE5J,QAAQ,YACRiC,QAAS,CACPhB,MAAOkH,YAAKlG,EAAQ+E,aAAcc,GAAQ7F,EAAQkF,mBAEpDW,KAAMA,GAEN,yBAAKzE,UAAWpB,EAAQyD,aACtB,kBAAC6C,EAAA,EAAD,CAAYG,QA/FM,WACxBX,GAAQ,KA+FA,kBAAC,IAAD,QAGJ,kBAAC4B,EAAA,EAAD,MACA,kBAACE,EAAA,EAAD,KAAO3E,GACP,kBAACyE,EAAA,EAAD,OAEF,0BAAMtG,UAAWpB,EAAQuF,SACvB,yBAAKnE,UAAWpB,EAAQsF,eACxB,kBAACuC,EAAA,EAAD,CAAWC,SAAS,KAAK1G,UAAWpB,EAAQkB,WAC1C,kBAACD,EAAA,EAAD,CAAMC,WAAS,EAAChC,QAAS,GACvB,kBAAC+B,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAGsG,GAAI,GAC5B,kBAACrG,EAAA,EAAD,CAAON,UAAW6E,GAChB,iDAKR,kBAAC,GAAD,Q,6jBClPD,IAAM+B,GAAU,SAACC,EAAOC,GAC7B,OAAQA,EAAOhG,MACb,KAAKxE,EAAYC,MAGf,OAFAwK,aAAaC,QAAQ,WAAYF,EAAO/F,QAAQ7B,UAChD6H,aAAaC,QAAQ,QAASF,EAAO/F,QAAQC,OACtC,MACF6F,EADL,CAEEI,iBAAiB,EACjB/H,SAAU4H,EAAO/F,QAAQ7B,SACzB8B,MAAO8F,EAAO/F,QAAQC,QAE1B,KAAK1E,EAAYE,OAEf,OADAuK,aAAaG,QACN,MACFL,EADL,CAEEI,iBAAiB,EACjB/H,SAAU,KACV8B,MAAO,OAEX,QACE,OAAO6F,ICTA7H,GAAcF,IAAMqI,gBAC3BC,GAAe,CACnBH,iBAAiB,EACjB/H,SAAU,KACV8B,MAAO,MA6CMqG,OA1Cf,WAAgB,IAAD,EACavI,IAAMwI,WAAWV,GAASQ,IADvC,mBACNP,EADM,KACChI,EADD,KAkBb,OAfAC,IAAMyI,WAAU,WACd,IAAMrI,EAAW6H,aAAaS,QAAQ,YAChCxG,EAAQ+F,aAAaS,QAAQ,SAE/BtI,GAAY8B,GACdnC,EAAS,CACPiC,KAAMxE,EAAYC,MAClBwE,QAAS,CACP7B,SAAUA,EACV8B,MAAOA,OAIZ,IAGD,kBAAChC,GAAYyI,SAAb,CACE7H,MAAO,CACLiH,QACAhI,aAGDgI,EAAMI,gBACL,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IAAI5H,UAAWyE,KACjC,kBAAC,IAAD,CAAOmD,KAAK,IAAI5H,UAAWyE,OAI/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,IAAI5H,UAAWpB,IACjC,kBAAC,IAAD,CAAUiJ,GAAG,SC3CHzB,QACW,cAA7B0B,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.861b849c.chunk.js","sourcesContent":["export const actionTypes = {\n  LOGIN: \"LOGIN\",\n  LOGOUT: \"LOGOUT\"\n};","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AuthContext } from \"../App\";\nimport { actionTypes } from \"../action\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\"\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const { dispatch } = React.useContext(AuthContext);\n  const initialState = {\n    username: \"\",\n    password: \"\",\n    isSubmitting: false,\n    errorMessage: null\n  };\n  const [data, setData] = React.useState(initialState);\n\n  const handleChange = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    setData({\n      ...data,\n      isSubmitting: true,\n      errorMessage: null\n    });\n    // TODO: call login api\n    setTimeout(function() {\n      dispatch({\n        type: actionTypes.LOGIN,\n        payload: {\n          username: data.username,\n          token: \"token123\"\n        }\n      });\n    }, 2000);\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={handleFormSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"User Name\"\n              name=\"username\"\n              autoFocus\n              value={data.username}\n              onChange={handleChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={data.password}\n              onChange={handleChange}\n            />\n\n            {data.errorMessage && <span>{data.errorMessage}</span>}\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={data.isSubmitting}\n            >\n              {data.isSubmitting ? \"Loading...\" : \"Log In\"}\n            </Button>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n  </div>\n);","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { mainListItems } from \"./ListItems\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { AuthContext } from \"../App\";\nimport { actionTypes } from \"../action\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const { dispatch } = React.useContext(AuthContext);\n  const [open, setOpen] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = e => {\n    e.preventDefault();\n    // TODO: call logout api\n    dispatch({\n      type: actionTypes.LOGOUT\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={1} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <PersonIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"right\"\n            }}\n            getContentAnchorEl={null}\n            keepMounted\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\"\n            }}\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\n            <Divider />\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <h1>Welcome Back!</h1>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n        <Copyright />\n      </main>\n    </div>\n  );\n}","import { actionTypes } from \"./action\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN:\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        isAuthenticated: true,\n        username: action.payload.username,\n        token: action.payload.token\n      };\n    case actionTypes.LOGOUT:\n      localStorage.clear();\n      return {\n        ...state,\n        isAuthenticated: false,\n        username: null,\n        token: null\n      };\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport { actionTypes } from \"./action\";\nimport { reducer } from \"./reducer\";\n\nexport const AuthContext = React.createContext();\nconst initialState = {\n  isAuthenticated: false,\n  username: null,\n  token: null\n};\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  React.useEffect(() => {\n    const username = localStorage.getItem(\"username\");\n    const token = localStorage.getItem(\"token\");\n\n    if (username && token) {\n      dispatch({\n        type: actionTypes.LOGIN,\n        payload: {\n          username: username,\n          token: token\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        state,\n        dispatch\n      }}\n    >\n      {state.isAuthenticated ? (\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"*\" component={Dashboard} />\n          </Switch>\n        </Router>\n      ) : (\n        <Router>\n          <Route exact path=\"/\" component={Login} />\n          <Redirect to=\"/\" />\n        </Router>\n      )}\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}