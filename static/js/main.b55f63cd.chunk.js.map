{"version":3,"sources":["action.js","components/Language.js","components/Login.js","components/ListItems.js","components/Dashboard.js","reducer.js","i18n/zh-TW.js","i18n/en.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","LOGIN","LOGOUT","SET_LANGUAGE","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","Language","classes","inputLabel","React","useRef","useState","labelWidth","setLabelWidth","useEffect","current","offsetWidth","useContext","AuthContext","state","dispatch","FormControl","variant","className","InputLabel","ref","id","Select","labelId","value","language","onChange","e","type","payload","target","MenuItem","Copyright","Typography","color","align","Link","href","Date","getFullYear","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","Login","username","password","isSubmitting","errorMessage","data","setData","handleChange","name","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","preventDefault","setTimeout","token","TextField","required","fullWidth","label","autoFocus","autoComplete","Button","disabled","Box","mt","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","Dashboard","open","setOpen","anchorEl","setAnchorEl","fixedHeightPaper","clsx","handleClose","AppBar","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Badge","badgeContent","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","getContentAnchorEl","keepMounted","transformOrigin","Boolean","onClose","Divider","Drawer","List","Container","maxWidth","lg","reducer","action","localStorage","setItem","isAuthenticated","clear","zh_TW","en","createContext","initialState","navigator","App","messages","useReducer","getItem","locale","key","defaultLocale","flatten","Provider","exact","path","to","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b55f63cd.chunk.js","sourcesContent":["export const actionTypes = {\n  LOGIN: \"LOGIN\",\n  LOGOUT: \"LOGOUT\",\n  SET_LANGUAGE: \"SET_LANGUAGE\"\n};","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { FormattedMessage } from \"react-intl\";\nimport { AuthContext } from \"../App\";\nimport { actionTypes } from \"../action\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function Language() {\n  const classes = useStyles();\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleChange = e => {\n    dispatch({\n      type: actionTypes.SET_LANGUAGE,\n      payload: {\n        language: e.target.value\n      }\n    });\n  };\n  const { state, dispatch } = React.useContext(AuthContext);\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} id=\"select-language-label\">\n          <FormattedMessage id=\"app.language.name\" />\n        </InputLabel>\n        <Select\n          labelId=\"select-language-label\"\n          id=\"select-language\"\n          value={state.language}\n          onChange={handleChange}\n          labelWidth={labelWidth}\n        >\n          <MenuItem value=\"en\">\n            <FormattedMessage id=\"app.language.english\" />\n          </MenuItem>\n          <MenuItem value=\"zh-TW\">\n            <FormattedMessage id=\"app.language.chinese\" />\n          </MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AuthContext } from \"../App\";\nimport { actionTypes } from \"../action\";\nimport { FormattedMessage } from \"react-intl\";\nimport Language from \"./Language\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\"\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const { dispatch } = React.useContext(AuthContext);\n  const initialState = {\n    username: \"\",\n    password: \"\",\n    isSubmitting: false,\n    errorMessage: null\n  };\n  const [data, setData] = React.useState(initialState);\n\n  const handleChange = e => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    setData({\n      ...data,\n      isSubmitting: true,\n      errorMessage: null\n    });\n    // TODO: call login api\n    setTimeout(function() {\n      dispatch({\n        type: actionTypes.LOGIN,\n        payload: {\n          username: data.username,\n          token: \"token123\"\n        }\n      });\n    }, 2000);\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            <FormattedMessage id=\"app.login.name\" />\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={handleFormSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label={<FormattedMessage id=\"app.login.username\" />}\n              name=\"username\"\n              autoFocus\n              value={data.username}\n              onChange={handleChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label={<FormattedMessage id=\"app.login.password\" />}\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={data.password}\n              onChange={handleChange}\n            />\n\n            {data.errorMessage && <span>{data.errorMessage}</span>}\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={data.isSubmitting}\n            >\n              {data.isSubmitting ? (\n                <FormattedMessage id=\"app.login.loading\" />\n              ) : (\n                <FormattedMessage id=\"app.login.name\" />\n              )}\n            </Button>\n            <Language />\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary={<FormattedMessage id=\"app.dashboard.name\" />} />\n    </ListItem>\n  </div>\n);","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { mainListItems } from \"./ListItems\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { AuthContext } from \"../App\";\nimport { actionTypes } from \"../action\";\nimport Language from \"./Language\";\nimport { FormattedMessage } from \"react-intl\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const { dispatch } = React.useContext(AuthContext);\n  const [open, setOpen] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = e => {\n    e.preventDefault();\n    // TODO: call logout api\n    dispatch({\n      type: actionTypes.LOGOUT\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            <FormattedMessage id=\"app.dashboard.name\" />\n          </Typography>\n          <Language />\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={1} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleMenu}\n            color=\"inherit\"\n          >\n            <PersonIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"right\"\n            }}\n            getContentAnchorEl={null}\n            keepMounted\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\"\n            }}\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleClose}>\n              <FormattedMessage id=\"app.settings.name\" />\n            </MenuItem>\n            <Divider />\n            <MenuItem onClick={handleLogout}>\n              <FormattedMessage id=\"app.logout.name\" />\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <h1><FormattedMessage id=\"app.dashboard.message\" /></h1>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n        <Copyright />\n      </main>\n    </div>\n  );\n}","import { actionTypes } from \"./action\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.LOGIN:\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        isAuthenticated: true,\n        username: action.payload.username,\n        token: action.payload.token\n      };\n    case actionTypes.LOGOUT:\n      localStorage.clear();\n      return {\n        ...state,\n        isAuthenticated: false,\n        username: null,\n        token: null\n      };\n    case actionTypes.SET_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload.language\n      };\n    default:\n      return state;\n  }\n};","export const zh_TW = {\n  \"app\": {\n    \"login\": {\n      \"name\": \"登入\",\n      \"loading\": \"登入中...\",\n      \"username\": \"使用者名稱\",\n      \"password\": \"密碼\"\n    },\n    \"logout\": {\n      \"name\": \"登出\"\n    },\n    \"language\": {\n      \"name\": \"語言\",\n      \"chinese\": \"中文\",\n      \"english\": \"英文\"\n    },\n    \"dashboard\": {\n      \"name\": \"儀表板\",\n      \"message\": \"歡迎回來！\"\n    },\n    \"settings\": {\n      \"name\": \"設定\"\n    }\n  }\n};","export const en = {\n  \"app\": {\n    \"login\": {\n      \"name\": \"Log In\",\n      \"loading\": \"Loading...\",\n      \"username\": \"User Name\",\n      \"password\": \"Password\"\n    },\n    \"logout\": {\n      \"name\": \"Logout\"\n    },\n    \"language\": {\n      \"name\": \"Language\",\n      \"chinese\": \"Chinese\",\n      \"english\": \"English\"\n    },\n    \"dashboard\": {\n      \"name\": \"Dashboard\",\n      \"message\": \"Welcome Back!\"\n    },\n    \"settings\": {\n      \"name\": \"Settings\"\n    }\n  }\n};","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport { actionTypes } from \"./action\";\nimport { reducer } from \"./reducer\";\nimport { IntlProvider } from \"react-intl\";\nimport { zh_TW } from \"./i18n/zh-TW\";\nimport { en } from \"./i18n/en\";\nimport flatten from \"flat\";\n\nexport const AuthContext = React.createContext();\nconst initialState = {\n  isAuthenticated: false,\n  username: null,\n  token: null,\n  language: navigator.language\n};\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  let messages;\n  if (state.language === \"zh-TW\") {\n    messages = zh_TW;\n  } else {\n    messages = en;\n  }\n  \n  React.useEffect(() => {\n    const username = localStorage.getItem(\"username\");\n    const token = localStorage.getItem(\"token\");\n\n    if (username && token) {\n      dispatch({\n        type: actionTypes.LOGIN,\n        payload: {\n          username: username,\n          token: token\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <IntlProvider\n      locale={state.language}\n      key={state.language}\n      defaultLocale=\"zh-TW\"\n      messages={flatten(messages)}\n    >\n      <AuthContext.Provider\n        value={{\n          state,\n          dispatch\n        }}\n      >\n        {state.isAuthenticated ? (\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route path=\"*\" component={Dashboard} />\n            </Switch>\n          </Router>\n        ) : (\n          <Router>\n            <Route exact path=\"/\" component={Login} />\n            <Redirect to=\"/\" />\n          </Router>\n        )}\n      </AuthContext.Provider>\n    </IntlProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}